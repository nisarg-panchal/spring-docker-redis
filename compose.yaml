services:
  spring-backend:
    image: "spring-docker-redis:latest"
    build:
      dockerfile: Dockerfile.quick
      context: .
    container_name: rest_service
    depends_on:
      - db
      - redis
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/donor_reg
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    ports:
      - "8080:8080" # Expose the port for external access
    networks:
      - monitoring

  db:
    container_name: database-service
    image: "postgres:latest"
    environment:
      - POSTGRES_DB=donor_reg
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
    ports:
      - "5432:5432" # Expose only the necessary port
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - monitoring

  redis:
    container_name: redis-server
    image: redis:latest
    expose:
      - 6379
    ports:
      - "6379:6379"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./src/main/resources/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - monitoring

volumes:
  postgres_data:

networks:
  monitoring: